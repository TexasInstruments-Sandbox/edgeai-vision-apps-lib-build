name: lib-build reusable

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      base_image:
        required: true
        type: string
      sdk_ver:
        required: true
        type: string
      soc:
        required: true
        type: string
    secrets:
      env_PAT:
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      # - name: Install QEMU
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y qemu binfmt-support qemu-user-static
      #     docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.env_PAT }}

      - name: Set environment variables
        run: |
          base_image=${{ inputs.base_image }}
          docker_tag=vision-apps-builder:${{ inputs.sdk_ver }}-${{ inputs.arch }}-${base_image//:/}
          remote_docker_tag=ghcr.io/${{ github.repository_owner }}/$docker_tag
          remote_docker_tag=${remote_docker_tag,,}
          echo "docker_tag=${docker_tag}" >> $GITHUB_ENV
          echo "remote_docker_tag=${remote_docker_tag}" >> $GITHUB_ENV

      - name: Pull Docker image
        run: |
          docker pull $remote_docker_tag
          docker tag $remote_docker_tag $docker_tag
          docker images

      - name: Install repo tool
        run: |
          mkdir -p ~/bin
          export PATH="${HOME}/bin:${PATH}"
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+rx ~/bin/repo
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1

      - name: Check repo file permissions
        run: ls -l ~/bin/repo

      - name: Check Python version
        run: python --version

      - name: Install source repos
        run: |
          export PATH="${HOME}/bin:${PATH}"
          ARCH=${{ inputs.arch }} BASE_IMAGE=${{ inputs.base_image }} ./init_setup.sh

      - name: Build the vision-apps lib
        run: |
          cmd="SOC=${{ inputs.soc }} GCC_LINUX_ARM_ROOT=/usr CROSS_COMPILE_LINARO= LINUX_SYSROOT_ARM=/ LINUX_FS_PATH=/ TREAT_WARNINGS_AS_ERROR=0 make yocto_build"
          echo "cmd=${cmd}"
          # remove '-it' in docker-run command in the docker_run.sh
          sed -i 's/docker run -it --rm \\/docker run --rm --platform linux\/arm64 \\/' docker_run.sh
          # build the vision-apps lib
          ARCH=${{ inputs.arch }} BASE_IMAGE=${{ inputs.base_image }} ./docker_run.sh "${cmd}"

      - name: Check the vision-apps.so
        run: |
          find workarea/vision_apps/out --name "*.so"

      - name: Package .deb
        run: |
          base_image=${{ inputs.base_image }}
          cmd="SOC=${{ inputs.soc }} PKG_DIST=${base_image//:/} make deb_package"
          echo "cmd=${cmd}"
          ARCH=${{ inputs.arch }} BASE_IMAGE=${{ inputs.base_image }} ./docker_run.sh ${cmd}

      - name: Check the vision-apps.deb
        run: |
          find workarea/vision_apps/out --name "*.deb"


