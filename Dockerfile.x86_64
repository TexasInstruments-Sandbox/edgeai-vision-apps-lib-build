ARG USE_PROXY
ARG HTTP_PROXY
ARG REPO_LOCATION
ARG SOC
ARG DEBIAN_FRONTEND=noninteractive

#=========================================================================
# The environment variable REPO_LOCATION is set from outside as needed,
# based on network
FROM ${REPO_LOCATION}ubuntu:22.04 AS base-0

#=========================================================================
FROM base-0 AS base-1
ARG USE_PROXY
ENV USE_PROXY=${USE_PROXY}
ARG HTTP_PROXY
ENV http_proxy=${HTTP_PROXY}
ENV https_proxy=${HTTP_PROXY}

#=========================================================================
FROM base-${USE_PROXY}
ARG DEBIAN_FRONTEND
ARG SOC
ENV SOC=${SOC}
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

# setup proxy settings
ADD setup_proxy.sh /root/
ADD proxy /root/proxy
RUN /root/setup_proxy.sh

# install python packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3-pip && \
    python3 -m pip install --upgrade pip && \
    rm -rf /var/lib/apt/lists/*

# intsall utils and miscellaneous packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    curl \
    vim \
    tmux \
    gdb \
    iputils-ping \
    rsync \
    strace \
    sysstat \
    net-tools \
    dialog \
    chrony \
    nfs-common \
    corkscrew \
    sudo \
    lsb-release && \
    rm -rf /var/lib/apt/lists/*

# install additional dependencies from the source pack
# below work well with Docker 24.0, but not work with Docker 20.10
# WORKDIR /opt/psdk-rtos
# RUN --mount=type=bind,source=./${SOC}-workarea,target=/opt/psdk-rtos/${SOC}-workarea \
#     cd ${SOC}-workarea && \
#     bash ./sdk_builder/scripts/setup_tools_apt.sh
WORKDIR /opt/psdk-rtos
ADD setup_tools_apt.sh /opt/psdk-rtos
RUN ./setup_tools_apt.sh

#=========================================================================
# add scripts
COPY entrypoint_x86_64.sh /root/entrypoint.sh

# .profile and .bashrc
WORKDIR /root
RUN echo "if [ -n \"$BASH_VERSION\" ]; then"     >  .profile && \
    echo "    # include .bashrc if it exists"    >> .profile && \
    echo "    if [ -f \"$HOME/.bashrc\" ]; then" >> .profile && \
    echo "        . \"$HOME/.bashrc\""           >> .profile && \
    echo "    fi"                                >> .profile && \
    echo "fi"                                    >> .profile && \
    echo "#!/bin/bash"                           >  .bashrc  && \
    echo "export PS1=\"${debian_chroot:+($debian_chroot)}\u@pc-docker:\w\$ \"" >> .bashrc

WORKDIR /opt/psdk-rtos

# setup entrypoint
ENTRYPOINT ["/root/entrypoint.sh"]
